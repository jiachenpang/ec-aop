#空中写卡卡号校验
ecaop.core.method.map.ecaop.trades.sell.mob.comm.otacarddate.check=otck
ecaop.core.method.otck.def={"mothod":"otck","remark":"空中写卡卡号校验"}
ecaop.core.method.otck.params=[\
    {"param":"msg",type:"JSON","required":true, "encrypted":false, "validators":"@JSONSchema(ecaop.ota.otck.Msg)"},\
    {"param":"timestamp",type:"Date","required":true, "encrypted":false, "validators":null},\
    {"param":"bizkey",type:"String(10)","required":true, "encrypted":false, "validators":null},\
    {"param":"apptx",type:"String(30)","required":true, "encrypted":false, "validators":null}]

ecaop.ota.otck.Msg={\
    operatorId:{type:"String(20)",required:true,validators:null},\
    province:{type:"String(2)",required:true,validators:"@FixedLen(2)"},\
    city:{type:"String(3)",required:true,validators:null},\
    district:{type:"String(10)",required:true,validators:null},\
    channelId:{type:"String(20)",required:true,validators:null},\
    channelType:{type:"String(20)",required:true,validators:"@FixedLen(7)"},\
    iccid:{type:"String(22)",required:false,validators:null},\
    para:{type:"JSON",required:false,validators:"@JSONSchema(ecaop.comm.conf.para.vali.para)"}}

#定义processors
ecaop.core.method.otck.processors=@TransReqParamsMapper()\
                @AopCall(ecaop.comm.conf.url.ec-aop.rest)
