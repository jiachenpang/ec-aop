ecaop.core.method.map.ecaop.trades.query.comm.arre.qry=qcar
ecaop.core.method.qcar.def={"mothod":"qcar","remark":"欠费查询"}
ecaop.core.method.qcar.params=[\
    {"param":"msg","type":"JSON","required":true, "encrypted":false, "validators":null},\
    {"param":"timestamp",type:"Date","required":true, "encrypted":false, "validators":null},\
    {"param":"bizkey",type:"String(10)","required":false, "encrypted":false, "validators":null},\
    {"param":"apptx",type:"String(30)","required":true, "encrypted":false, "validators":null}]
    
    #msg 校验器 
    ecaop.trades.qcar.MsgSchema={\
   operatorId:{type:"String(20)",required:true,encrypted:false,validators:null},\
    province:{type:"String(2)",required:true,encrypted:false,validators:"@FixedLen(2)" },\
    city:{type:"String(3)",required:true,encrypted:false,validators:"@FixedLen(3)" },\
    district:{type:"String(10)",required:false,encrypted:false,validators:null},\
    channelId:{type:"String(20)",required:true,encrypted:false,validators:null},\
    channelType:{type:"String(7)",required:true,encrypted:false,validators:"@FixedLen(7)" },\
    number:{type:"String(30)",required:flase,encrypted:false,validators:null}}
    
ecaop.trades.qcar.checkOwe.ParametersMapping=[\
{paramterName:"transIDO",extractor:"TransIdFromRds",extractorConfig:"",temp:true},\
{paramterName:"processTime",extractor:"currentTime",extractorConfig:"yyyyMMddHHmmss",temp:true},\
{paramterName:"activityCode",extractor:"fix",extractorConfig:"T1000005",temp:true},\
{paramterName:"bipCode",extractor:"fix",extractorConfig:"BIP1C002",temp:true},\
{paramterName:"routeType",extractor:"fix",extractorConfig:"01",temp:true},\
{paramterName:"route",extractor:"propertyGet",extractorConfig:"msg.number",temp:true},\
{paramterName:"province",extractor:"propertyGet",extractorConfig:"msg.province",temp:true},\
{paramterName:"city",extractor:"propertyGet",extractorConfig:"msg.city",temp:true},\
{paramterName:"district",extractor:"propertyGet",extractorConfig:"msg.district",temp:true},\
{paramterName:"channelId",extractor:"propertyGet",extractorConfig:"msg.channelId",temp:true},\
{paramterName:"channelType",extractor:"propertyGet",extractorConfig:"msg.channelType",temp:true},\
{paramterName:"operatorId",extractor:"propertyGet",extractorConfig:"msg.operatorId",temp:true},\
{paramterName:"msg",extractor:"propParamInto",extractorConfig:"msg.numId,msg.serialNumber"},\
{paramterName:"msg",extractor:"json2String",extractorConfig:"msg",temp:true},\
{paramterName:"testFlag",extractor:"fix",extractorConfig:"0",temp:true},\
{paramterName:"cutOffDay",extractor:"currentTime",extractorConfig:"yyyyMMdd",temp:true},\
{paramterName:"content",extractor:"fix",extractorConfig:"record",temp:true},\
{paramterName:"xmlmsg",extractor:"json2Xml",extractorConfig:"json2xmlConfigKey:ecaop.trades.qcar.checkOwetemplate@ONS"}\
 ]
ecaop.trades.qcar.checkOwetemplate=com/ailk/ecaop/biz/template/nfour/QryArreFeeInfo
    
#定义流程
ecaop.core.method.qcar.processors=@checkOweSingle()






