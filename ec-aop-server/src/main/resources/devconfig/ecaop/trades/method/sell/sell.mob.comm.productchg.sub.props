#产品变更提交接口 by wangmc
ecaop.core.method.map.ecaop.trades.sell.mob.comm.productchg.sub=mcps
ecaop.core.method.mcps.def={"mothod":"mcps","remark":"产品变更提交接口"}
ecaop.core.method.mcps.params=[\
    {"param":"msg","type":"JSON","required":true, "encrypted":false, "validators":"@JSONSchema(ecaop.trades.mcps.msg)"},\
    {"param":"timestamp",type:"Date","required":true, "encrypted":false, "validators":null},\
    {"param":"bizkey",type:"String(10)","required":false, "encrypted":false, "validators":null},\
    {"param":"apptx",type:"String(30)","required":true, "encrypted":false, "validators":null}]

#msg 校验器
ecaop.trades.mcps.msg={\
    operatorId:{type:"String(20)",required:true,encrypted:false,validators:null},\
    province:{type:"String(2)",required:true,encrypted:false,validators:"@FixedLen(2)" },\
    city:{type:"String(3)",required:true,encrypted:false,validators:"@FixedLen(3)" },\
    district:{type:"String(10)",required:true,encrypted:false,validators:null},\
    channelId:{type:"String(20)",required:true,encrypted:false,validators:null},\
    channelType:{type:"String(7)",required:true,encrypted:false,validators:"@FixedLen(7)" },\
    ordersId:{type:"String(30)",required:true,encrypted:false,validators:null},\
    opeSysType:{type:"String(1)",required:true,encrypted:false,validators:null},\
    serialNumber:{type:"String(20)",required:true,encrypted:false,validators:null},\
    userInfo:{ type:"JSON", required:false, validator:"@JSONSchema(ecaop.trades.mcps.userInfo.param)"},\
    para:{ type:"JSON", required:false, validator:"@JSONSchema(ecaop.comm.conf.para.vali.Para)" }\
}

ecaop.trades.mcps.userInfo.param{\
    transresourcesType:{type:"String(2)",required:true,encrypted:false,validators:null},\
    isTransystem:{type:"String(1)",required:true,encrypted:false,validators:null},\
    productInfo:{ type:"JSON", required:true, validator:"@JSONSchema(ecaop.trades.mcps.productInfo.param)"}\
}

ecaop.trades.mcps.productInfo.param{\
    priproductId:{type:"String(40)",required:true,encrypted:false,validators:null},\
    tarproductId:{type:"String(40)",required:true,encrypted:false,validators:null},\
    packageInfo:{ type:"JSON", required:false, validator:"@JSONSchema(ecaop.trades.mcps.packageInfo.param)"}\
}

ecaop.trades.mcps.packageInfo.param{\
    packageId:{type:"String(40)",required:true,encrypted:false,validators:null},\
    packageName:{type:"String(200)",required:true,encrypted:false,validators:null},\
    packageType:{type:"String(2)",required:true,encrypted:false,validators:null},\
    startDate:{type:"String(14)",required:true,encrypted:false,validators:null},\
    endDate:{type:"String(14)",required:true,encrypted:false,validators:null},\
    elementInfo:{ type:"JSON", required:false, validator:"@JSONSchema(ecaop.trades.mcps.elementInfo.param)"}\
}

ecaop.trades.mcps.elementInfo.param{\
    elementCode:{type:"String(40)",required:true,encrypted:false,validators:null},\
    elementName:{type:"String(200)",required:true,encrypted:false,validators:null},\
    startDate:{type:"String(14)",required:true,encrypted:false,validators:null},\
    endDate:{type:"String(14)",required:true,encrypted:false,validators:null}\
}

#定义流程跳转
ecaop.core.method.mcps.processors=@productChangeRoute\
                                  @FlowProcessor(ecaop.core.method.mcps.flowConfig)
#跳转流程
ecaop.core.method.mcps.flowConfig=[\
    {id:"01", processor:"SimpleProcessor", selector:"GlobalParam(opeSysType)", transitions:"1->02 *->03"},\
    {id:"02", processor:"AopHandler(ecaop.mcps.toBss.processors)", selector:"Noop", transitions:"*->STOP"},\
    {id:"03", processor:"SimpleProcessor", selector:"GlobalParam(isTransystem)", transitions:"0->04 1->05"},\
    {id:"04", processor:"AopHandler(ecaop.mcps.23To4.processors)", selector:"Noop", transitions:"*->STOP"},\
    {id:"05", processor:"AopHandler(ecaop.mcps.chgProduct.processors)", selector:"Noop", transitions:"*->STOP"},\
]

#调用全业务到BSS，即2G转3G（后付费、预付费），3G互转。无特殊处理。直接调用省份
ecaop.mcps.toBss.processors=@changeProductToBssProcessor()

#调用aop的23转4流程
ecaop.mcps.23To4.processors=@preDataFor23To4Processor()\
                            @TransToCBSSProcessor()\
                            @preOrderSubProcessor()

#调用aop的套餐变更流程
ecaop.mcps.chgProduct.processors=@preDateToChgProductProcessor()\
                                 @newChangeProduct4CBProcessor()\
                                 @preOrderSubProcessor()

#报文头参数
ecaop.ecsb.mcps.ParametersMapping=[\
    {paramterName:"msg",extractor:"json2StringNew",extractorConfig:"msg,ecaop.trade.template.checkProduct.refProductChange",temp:true},\
    {paramterName:"soapMessage",extractor:"json2xmlcb",extractorConfig:"json2xmlConfigKey:ecaop.trades.mcps.template@FBS@REF_PRODUCT_CHANGE_INPUT@n1529397156@REF_PRODUCT_CHANGE_REQ"}\
]

ecaop.trades.mcps.template=com/ailk/ecaop/biz/template/product/RefProductChange
