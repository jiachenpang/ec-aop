#人脸识别校验
ecaop.core.method.map.ecaop.trades.query.comm.face.check=qcfc
ecaop.core.method.qcfc.def={"mothod":"qcfc","remark":"人脸识别校验"}
ecaop.core.method.qcfc.params=[{"param":"msg","type":"JSON","required":true, "encrypted":false, "validators":"@JSONSchema(ecaop.query.qcfc.Msg)"},\
    {"param":"timestamp",type:"Date","required":true, "encrypted":false, "validators":null},\
    {"param":"apptx",type:"String(30)","required":true, "encrypted":false, "validators":null}]
    
#msg 校验器 
ecaop.query.qcfc.Msg={\
    province:{ type:"String(2)", required:true,validators:"@FixedLen(2)" },\
    city:{ type:"String(3)", required:true,validators:"@FixedLen(3)" },\
    system:{ type:"String(2)", required:true,validators:"@FixedLen(2)" },\
    scene:{ type:"String(2)", required:true,validators:"@FixedLen(2)" },\
    certId:{ type:"String(19)", required:false,validators:null },\
    certName:{ type:"String(60)", required:false,validators:null },\
    faceImg:{ type:"String(9999999)", required:true,validators:null },\
    baseImg:{ type:"String(9999999)", required:false,validators:null },\
    para:{ type:"JSON", required:false, validator:"@JSONSchema(ecaop.comm.conf.para.vali.para)" }\
}
#定义processors
ecaop.core.method.qcfc.processors=@faceCheck()

ecaop.proc.method.qcfc.processors=\
                @CertCheckType()\
                @ParametersMapper(method.qcfc.params.mapping) \
                @AopCall(ecaop.comm.conf.url.phw-eop, 60) \
                @FormatDateAndDealException4Gzt()\
                @JSONParametersMapper(ecaop.qcfc.params.json.mapping)\
                @removeEmpty()

ecaop.qcfc.params.json.mapping=[\
{paramterName:"certName",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.checkCustName"},\
{paramterName:"certId",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.checkCustId"},\
{paramterName:"photo",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.photo"},\
{paramterName:"sex",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.gender"},\
{paramterName:"sex",extractor:"Decode",extractorConfig:"sex,0,M,1,F"},\
{paramterName:"birthday",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.birthday"},\
{paramterName:"nation",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.nationality"},\
{paramterName:"addr",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.address"},\
{paramterName:"exp",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.validityPeriod"},\
{paramterName:"issue",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.licenceIssAuth"},\
{paramterName:"certTypeR",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.checkType"},\
{paramterName:"imgType",extractor:"propertyGet",extractorConfig:"rspmsg.Message.svcCont.imgType"}\
]

ecaop.qcfc.params.config.syscode=\
{"cbsb":"R001","rlct":"R002","jsbss":"R003","nxpr":"R004","n6sb":"R005","hupr":"R006","cqps":"R007","hapr":"R008",\
"auto":"R009","mnsb":"R010","ynpre":"R011","jkzy":"R012","xjpr":"R013","gdbpr":"R014","hipre":"R015","jxpre":"R016",\
"sdapp":"R017","ahpre":"R018","gzbpr":"R019","sdpr":"R020","hpsb":"R021","tjpr":"R022","hnpr":"R023","gspr":"R024",\
"gcsb":"R025","xzpre":"R026","shpre":"R027","snpre":"R028","fjpre":"R029","itsb":"R030","jlpr":"R031","zwkj":"R032"\
,"gxbpr":"R033","zjbpr":"R034","jxbs":"R035","jspr":"R036","scpr":"R037","cmsb":"R038"}

ecaop.global.param.gzt.aop.accessId=cucc

#新老流程切换开关
ecaop.global.param.face.aip.check=2

ecaop.global.param.gzt.aop.accessPwd=2496380B72

method.qcfc.params.mapping=[\
{paramterName:"eop_appcode",extractor:"fix",extractorConfig:"D765425380464D8EAB5A9F51249FE4C1"},\
{paramterName:"eop_action",extractor:"fix",extractorConfig:"idservice.ess.idcheck"},\
{paramterName:"eop_reqts",extractor:"currentTime",extractorConfig:""},\
{paramterName:"transIDO",extractor:"GztTransIdFromRds",extractorConfig:""},\
{paramterName:"processTime",extractor:"currentTime",extractorConfig:"yyyyMMddHHmmss",temp:true},\
{paramterName:"province",extractor:"propertyGet",extractorConfig:"msg.province", temp:true},\
{paramterName:"city",extractor:"propertyGet",extractorConfig:"msg.city", temp:true},\
{paramterName:"certId",extractor:"propertyGet",extractorConfig:"msg.certId", temp:true},\
{paramterName:"certName",extractor:"propertyGet",extractorConfig:"msg.certName", temp:true},\
{paramterName:"Message",extractor:"freemarker",extractorConfig:\
    "{\\\"actionCode\\\":\\\"0\\\",\\\"actionRelation\\\":\\\"0\\\",\\\"activityCode\\\":\\\"T3G00001\\\",\\\"bipCode\\\":\\\"BIP4F002\\\",\\\"bipVer\\\":\\\"0100\\\",\\\"homeDomain\\\":\\\"UGZT\\\",\\\"msgReceiver\\\":\\\"9800\\\",\\\"msgSender\\\":\\\"9801\\\",\\\"origDomain\\\":\\\"UESS\\\",\\\"procID\\\":\\\"${transIDO}\\\",\\\"processTime\\\":\\\"${processTime}\\\",\\\"routing\\\":{\\\"routeType\\\":\\\"00\\\",\\\"routeValue\\\":\\\"00\\\"},\\\"svcCont\\\":{\\\"@type\\\":\\\"org.phw.eop.api.bean.checkcustid5.ess.CheckId5ReqBody4Ess\\\",\\\"accessType\\\":\\\"01\\\",\\\"checkCustId\\\":\\\"${certId}\\\",\\\"checkCustName\\\":\\\"${certName}\\\",\\\"checkType\\\":\\\"${type}\\\",\\\"sysCode\\\":\\\"${sysCode}\\\",\\\"city\\\":\\\"${city}\\\",\\\"province\\\":\\\"${province}\\\"},\\\"svcContVer\\\":\\\"0100\\\",\\\"testFlag\\\":\\\"0\\\",\\\"transIDO\\\":\\\"${transIDO}\\\"}"}\
]